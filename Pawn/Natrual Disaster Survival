local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()




    local Window = Rayfield:CreateWindow({
       Name = "Untitled Natural Disaster Survival script",
       Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
       LoadingTitle = "Untitled Natural Disaster Survival script",
       LoadingSubtitle = "by Me",
       Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
    
       DisableRayfieldPrompts = false,
       DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
    
       ConfigurationSaving = {
          Enabled = false,
          FolderName = nil, -- Create a custom folder for your hub/game
          FileName = "skibidi"
       },
    
       Discord = {
          Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
          Invite = "", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
          RememberJoins = true -- Set this to false to make them join the discord every time they load it up
       },
    
      
       KeySystem = true, -- Set this to true to use our key system
       KeySettings = {
          Title = "Untitled script",
          Subtitle = "Game: Natrual Disaster Survival",
          Note = "Key Found in discord: https://discord.gg/52QaAMTMeH. ", -- Use this to tell the user how to get a key
          FileName = "Untitled Hub", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
          SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
          GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
          Key = {"https://pastebin.com/raw/2FB0320n"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
       }
    })

game.StarterGui:SetCore("SendNotification", {Title="Welcome to Untitled hub"; Text="Natrual Disaster Survival"; Duration=1;})
game.StarterGui:SetCore("SendNotification", {Title="Welcome to Untitled hub"; Text="Natrual Disaster Survival"; Duration=1;})
game.StarterGui:SetCore("SendNotification", {Title="Welcome to Untitled hub"; Text="Natrual Disaster Survival"; Duration=1;})

local newBrick = Instance.new("Part")

newBrick.Size = Vector3.new(10, 1, 10)  -- Set the size of the brick (length, width, height)
newBrick.Position = Vector3.new(-114, 500, -114)  -- Set the position where the brick will appear (X, Y, Z)
newBrick.Color = Color3.fromRGB(255, 255, 255)  -- Set the color of the brick (red in this case)
newBrick.Anchored = true  -- Anchor the brick so it doesn’t fall due to gravity

newBrick.Parent = game.Workspace

local newBrick = Instance.new("Part")


newBrick.Size = Vector3.new(20, 1, 20)  -- Set the size of the brick (length, width, height)
newBrick.Position = Vector3.new(-114, 510, -114)  -- Set the position where the brick will appear (X, Y, Z)
newBrick.Color = Color3.fromRGB(255, 255, 255)  -- Set the color of the brick (red in this case)
newBrick.Anchored = true  -- Anchor the brick so it doesn’t fall due to gravity

newBrick.Parent = game.Workspace

local newBrick = Instance.new("Part")


newBrick.Size = Vector3.new(20, 1, 20)  -- Set the size of the brick (length, width, height)
newBrick.Position = Vector3.new(-114, 512, -114)  -- Set the position where the brick will appear (X, Y, Z)
newBrick.Color = Color3.fromRGB(255, 255, 255)  -- Set the color of the brick (red in this case)
newBrick.Anchored = true  -- Anchor the brick so it doesn’t fall due to gravity

newBrick.Parent = game.Workspace


local newBrick = Instance.new("Part")


newBrick.Size = Vector3.new(20, 1, 20)  -- Set the size of the brick (length, width, height)
newBrick.Position = Vector3.new(-114, 514, -114)  -- Set the position where the brick will appear (X, Y, Z)
newBrick.Color = Color3.fromRGB(255, 255, 255)  -- Set the color of the brick (red in this case)
newBrick.Anchored = true  -- Anchor the brick so it doesn’t fall due to gravity

newBrick.Parent = game.Workspace

local newBrick = Instance.new("Part")


newBrick.Size = Vector3.new(20, 1, 20)  -- Set the size of the brick (length, width, height)
newBrick.Position = Vector3.new(-114, 516, -114)  -- Set the position where the brick will appear (X, Y, Z)
newBrick.Color = Color3.fromRGB(255, 255, 255)  -- Set the color of the brick (red in this case)
newBrick.Anchored = true  -- Anchor the brick so it doesn’t fall due to gravity

newBrick.Parent = game.Workspace










local PlayerName = game.Players.LocalPlayer
print("User Found! " .. PlayerName.Name)



    local MainTab = Window:CreateTab("Main", 4483362458) -- Title, Image

    local Section = MainTab:CreateSection("Character")

    local Toggle = MainTab:CreateToggle({
   Name = "Freeze player",
   CurrentValue = false,
   Flag = "Freeze", 
   Callback = function(Value)
      local player = game.Players.LocalPlayer
      local character = player.Character or player.CharacterAdded:Wait()
      local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

      if Value then
         humanoidRootPart.Anchored = true
      else
         humanoidRootPart.Anchored = false
      end
   end,
})

local Button = MainTab:CreateButton({
   Name = "Fly ( e to enable/disable )",
   Callback = function()


repeat wait()
until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
local mouse = game.Players.LocalPlayer:GetMouse()


repeat wait() until mouse


local plr = game.Players.LocalPlayer
local torso = plr.Character.Torso
local flying = true
local deb = true
local ctrl = {f = 0, b = 0, l = 0, r = 0}
local lastctrl = {f = 0, b = 0, l = 0, r = 0}
local maxspeed = 50
local speed = 0
local bg = nil
local bv = nil


function Fly()
	
    bg = Instance.new("BodyGyro", torso)
    bg.P = 9e4
    bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    bg.cframe = torso.CFrame
    bv = Instance.new("BodyVelocity", torso)
    bv.velocity = Vector3.new(0,0.1,0)
    bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
    repeat wait()
      plr.Character.Humanoid.PlatformStand = true
      if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
        speed = speed+.5+(speed/maxspeed)
        if speed > maxspeed then
          speed = maxspeed
        end
      elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
        speed = speed-1
        if speed < 0 then
          speed = 0
        end
      end
      if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
        bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
        lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
      elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
        bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
      else
        bv.velocity = Vector3.new(0,0.1,0)
      end
      bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
    until not flying
    ctrl = {f = 0, b = 0, l = 0, r = 0}
    lastctrl = {f = 0, b = 0, l = 0, r = 0}
    speed = 0
    bg:Destroy()
	bg = nil
    bv:Destroy()
	bv = nil
    plr.Character.Humanoid.PlatformStand = false
end


mouse.KeyDown:connect(function(key)
	if key:lower() == "e" then
		if flying then 
			flying = false
		else
			flying = true
			Fly()
		end
	elseif key:lower() == "w" then
		ctrl.f = 1
	elseif key:lower() == "s" then
		ctrl.b = -1
	elseif key:lower() == "a" then
		ctrl.l = -1
	elseif key:lower() == "d" then
		ctrl.r = 1
	end
end)

mouse.KeyUp:connect(function(key)
	if key:lower() == "w" then
		ctrl.f = 0
	elseif key:lower() == "s" then
		ctrl.b = 0
	elseif key:lower() == "a" then
		ctrl.l = 0
	elseif key:lower() == "d" then
		ctrl.r = 0
	end
end)

Fly()

    
   end,
})






            





    local Slider = MainTab:CreateSlider({
       Name = "Walkspeed",
       Range = {1, 60},
       Increment = 2,
       Suffix = "walkspeed",
       CurrentValue = 16,
       Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
       Callback = function(Value)
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
    end,
})


local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Function to enable no-clip for the player
local function enableNoClip()
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
end

-- Function to disable no-clip for the player
local function disableNoClip()
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
end


local Toggle = MainTab:CreateToggle({
    Name = "No-Clip",
    CurrentValue = false,
    Flag = "NoClipToggle",
    Callback = function(Value)
        if Value then
            enableNoClip()  -- Enable no-clip
            print("No-clip enabled!")
        else
            disableNoClip()  -- Disable no-clip
            print("No-clip disabled!")
        end
    end,
})





            


local Divider = MainTab:CreateDivider()

local Section = MainTab:CreateSection("Other")

local Button = MainTab:CreateButton({
    Name = "Expose Next Disaster",
    Callback = function()
        local PlayerName = game.Players.LocalPlayer
        print(PlayerName)

        -- Get the current disaster value (or any value you want to send)
        local CurrentEvent = game.Workspace[PlayerName.Name].SurvivalTag.Value
        print(CurrentEvent)

        -- Format the message you want to say in the chat
        local message = "The next disaster is: " .. tostring(CurrentEvent)

        -- Send the message directly to the chat window using the legacy chat system
        game:GetService("Chat"):Chat(PlayerName.Character, message, Enum.ChatColor.White)
    end,
})

local Button = MainTab:CreateButton({
    Name = "Disable fall damage ( Does NOT work )",
    Callback = function()
        game.Workspace[PlayerName.Name].FallDamageScript:Destroy()
    end,     
})




    local TeleportsTab = Window:CreateTab("Teleports", 4483362458) -- Title, Image

    local Section = TeleportsTab:CreateSection("Teleports")

    local Button = TeleportsTab:CreateButton({
   Name = "Teleport to map",
   Callback = function()

        local Player = game.Players.LocalPlayer.Character.HumanoidRootPart
        local location = CFrame.new(-133.341141, 47.5599976, 3.14150834, 0.00103184045, -1.08418563e-08, -0.999999464, -2.52378562e-10, 1, -1.08421228e-08, 0.999999464, 2.63565753e-10, 0.00103184045) -- Set coordinate
        local humanoid = game.Players.LocalPlayer.Character.Humanoid
        wait(0)
        Player.CFrame = location
   
   end,
})

    local Button = TeleportsTab:CreateButton({
   Name = "Teleport to lobby",
   Callback = function()

        local Player = game.Players.LocalPlayer.Character.HumanoidRootPart
        local location = CFrame.new(-266.561371, 194.499939, 300.270691, 0.916371047, 4.7594046e-08, -0.400330037, -9.39645233e-08, 1, -9.62014326e-08, 0.400330037, 1.25773028e-07, 0.916371047) -- Set coordinate
        local humanoid = game.Players.LocalPlayer.Character.Humanoid
        wait(0)
        Player.CFrame = location
   
   end,
})


local Button = TeleportsTab:CreateButton({
   Name = "Teleport to safe",
   Callback = function()

            

        local Player = game.Players.LocalPlayer.Character.HumanoidRootPart
        local location = CFrame.new(-114, 505, -114) -- Set coordinate
        local humanoid = game.Players.LocalPlayer.Character.Humanoid
        wait(0)
        Player.CFrame = location
   
   end,
})





    local ESPTab = Window:CreateTab("ESP", 4483362458) -- Title, Image

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

-- Settings
local BOX_COLOR = Color3.fromRGB(255, 0, 0)  -- Red boxes
local BOX_TRANSPARENCY = 0.5
local BOX_SIZE = Vector3.new(4, 6, 4)  -- Box dimensions

local boxes = {}  -- Store boxes for toggling
local boxEnabled = false

-- Function to create a box around a player
local function createBox(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local root = character:WaitForChild("HumanoidRootPart")

    local box = Instance.new("BoxHandleAdornment")
    box.Size = BOX_SIZE
    box.Color3 = BOX_COLOR
    box.Transparency = BOX_TRANSPARENCY
    box.Adornee = root
    box.AlwaysOnTop = true
    box.ZIndex = 0
    box.Parent = workspace

    boxes[player] = box

    player.CharacterRemoving:Connect(function()
        box:Destroy()
        boxes[player] = nil
    end)
end

-- Add boxes for all players
local function addBoxesToPlayers()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Character and not boxes[player] then
            createBox(player)
        end
    end
end

local function removeBoxes()
    for _, box in pairs(boxes) do
        box:Destroy()
    end
    boxes = {}
end

local Toggle = ESPTab:CreateToggle({
    Name = "Boxes",
    CurrentValue = false,
    Flag = "ToggleBoxes", 
    Callback = function(Value)
        boxEnabled = Value
        if not boxEnabled then
            removeBoxes()
        end
    end,
})

RunService.RenderStepped:Connect(function()
    if boxEnabled then
        addBoxesToPlayers()
    end
end)

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if boxEnabled then
            createBox(player)
        end
    end)
end)

    local TrollTab = Window:CreateTab("Troll", 4483362458) -- Title, Image

    local Section = TrollTab:CreateSection("Fling Troll")

local Button = TrollTab:CreateButton({
   Name = "Im Telling God",
   Callback = function()

    enableNoClip()

                    game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"), "Thats it, Im telling god", Enum.ChatColor.Red)
            wait(0.1)
                    game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"), ".", Enum.ChatColor.Red)
            wait(0.1)
                    game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"), ".", Enum.ChatColor.Red)

            Wait(5)

        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        -- Create BodyVelocity to apply the fling force
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)  -- High force to move the player
        bodyVelocity.Velocity = Vector3.new(0, 250, 0)  -- Apply upward force (you can adjust the value)
        bodyVelocity.P = 10000  -- High priority for the force
        bodyVelocity.Parent = humanoidRootPart

        -- Make the player fly for 2 seconds, then stop the force
        wait(5)

        -- Remove the BodyVelocity to stop flying
        bodyVelocity:Destroy()

        print(player.Name .. " is no longer flying.")

        disableNoClip()

   end,
})


local Button = TrollTab:CreateButton({
   Name = "Knockback",
   Callback = function()

    enableNoClip()

                    game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"), "I dont feel so good..", Enum.ChatColor.Red)
            wait(0.1)
                    game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"), ".", Enum.ChatColor.Red)
            wait(0.1)
                    game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"), ".", Enum.ChatColor.Red)

            Wait(1)

        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        -- Create BodyVelocity to apply the fling force
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)  -- High force to move the player
        bodyVelocity.Velocity = Vector3.new(-5000, 0, 0)  -- Apply upward force (you can adjust the value)
        bodyVelocity.P = 10000  -- High priority for the force
        bodyVelocity.Parent = humanoidRootPart

        -- Make the player fly for 2 seconds, then stop the force
        wait(2)

        -- Remove the BodyVelocity to stop flying
        bodyVelocity:Destroy()

        print(player.Name .. " is no longer flying.")

        disableNoClip()

   end,
})








    local MiscTab = Window:CreateTab("Misc", 4483362458) -- Title, Image

    local Section = MiscTab:CreateSection("Misc")



local Button = MiscTab:CreateButton({
   Name = "Infinite yeild ( temporary while working on script )",
   Callback = function()

        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   

   end,
})


local Button = MiscTab:CreateButton({
   Name = "Unload",
   Callback = function()
   
    Rayfield:Destroy()

   end,
})

